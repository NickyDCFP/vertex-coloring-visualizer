{"ast":null,"code":"import * as d3 from 'd3';\n//if you add event listeners, be sure to remove them when you delete the node or destroy\n//the graph\nconst radius = 7;\n\n// const handleClick = (event, clicked) => {\n//     event.stopPropagation();\n//     console.log(event);\n//     console.log(event.target.tagName);\n//     console.log(clicked);\n//   }\n\nexport class Graph {\n  constructor(svg, centerX, centerY, defaultColor, doText) {\n    this.adj = new Map();\n    this.nodes = [];\n    this.edges = [];\n    this.v = 0;\n    this.defaultColor = defaultColor;\n    this.simulation = d3.forceSimulation(this.nodes).force('link', d3.forceLink(this.edges).strength(0)).force('collide', d3.forceCollide().radius(30)).force('center', d3.forceCenter(centerX, centerY)).force('x', d3.forceX().x(centerX)).force('y', d3.forceY().y(centerY).strength(0.5));\n    this.svg = svg.on('click', (event, d) => this.handleClick(event, d));\n    this.circles = this.svg.append('g').classed('node-group', true);\n    this.lines = this.svg.append('g').classed('edge-group', true);\n    this.lines.lower();\n    this.doText = doText;\n    this.text = this.svg.append('g').classed('text-group', true);\n    this.text.raise();\n    this.simulation.on('tick', () => {\n      this.circles.selectAll('.node').attr('cx', node => node.x).attr('cy', node => node.y);\n      this.text.selectAll('text').style('x', node => node.x).style('y', node => node.y);\n      this.lines.selectAll('.edge').attr('x1', edge => edge.source.x).attr('x2', edge => edge.target.x).attr('y1', edge => edge.source.y).attr('y2', edge => edge.target.y);\n    });\n  }\n  handleClick(event, clicked) {\n    event.stopPropagation();\n    // console.log(event);\n    // console.log(clicked);\n    // console.log(event.target.tagName);\n    if (event.target.tagName === 'line') {\n      console.log(clicked);\n      this.removeEdge(clicked.source, clicked.target);\n    } else if (event.target.tagName === 'svg') {\n      this.addNode(event.clientX, event.clientY);\n    }\n  }\n  updateNodes() {\n    this.circles.selectAll('.node').data(this.nodes).enter().append('circle').classed('node', true).attr('fill', node => node.color).attr('stroke', 'black').attr('r', radius);\n    // .on('click', handleClick);\n    this.circles.exit().remove();\n    this.text.selectAll('text').data(this.nodes).enter().append('text').attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('pointer-events', 'none').style('user-select', 'none').text(node => this.doText ? node.id : \"\");\n  }\n  updateEdges() {\n    this.simulation.force('link', d3.forceLink(this.edges));\n    this.lines.selectAll('.edge').data(this.edges).enter().append('line').classed('edge', true).on('click', (event, clicked) => this.handleClick(event, clicked)).attr('stroke-width', '3px').on('mouseover', event => {\n      d3.select(event.currentTarget).style('stroke', 'red').raise();\n    }).on('mouseout', event => {\n      d3.select(event.currentTarget).style('stroke', 'gray');\n    }).lower();\n    this.lines.exit().remove();\n  }\n  addNode(x, y) {\n    const node = {\n      id: this.v,\n      color: this.defaultColor,\n      x,\n      y\n    };\n    this.nodes.push(node);\n    this.adj.set(this.v++, {\n      node,\n      neighbors: []\n    });\n    this.simulation.nodes(this.nodes).alpha(0.2).restart();\n    this.updateNodes();\n  }\n  addEdge(source, target) {\n    if (source === target || this.adj.get(source).neighbors.includes(target)) return;\n    this.adj.get(source).neighbors.push(target);\n    this.adj.get(target).neighbors.push(source);\n    this.edges.push({\n      source: this.adj.get(source).node,\n      target: this.adj.get(target).node\n    });\n    this.updateEdges();\n  }\n  removeEdge(source, target) {\n    console.log(this.adj);\n    console.log(\"deleting edge\");\n    this.adj.get(source.id).neighbors = this.adj.get(source.id).neighbors.filter(d => d !== target.id);\n    this.adj.get(target.id).neighbors = this.adj.get(target.id).neighbors.filter(d => d !== source.id);\n    this.edges = this.edges.filter(d => d !== {\n      source,\n      target\n    } && d !== {\n      source: target,\n      target: source\n    });\n    this.updateEdges();\n    console.log(this.adj);\n  }\n  recolor(vertex, color) {\n    this.adj.get(vertex).node.color = color;\n  }\n}\n;","map":{"version":3,"names":["d3","radius","Graph","constructor","svg","centerX","centerY","defaultColor","doText","adj","Map","nodes","edges","v","simulation","forceSimulation","force","forceLink","strength","forceCollide","forceCenter","forceX","x","forceY","y","on","event","d","handleClick","circles","append","classed","lines","lower","text","raise","selectAll","attr","node","style","edge","source","target","clicked","stopPropagation","tagName","console","log","removeEdge","addNode","clientX","clientY","updateNodes","data","enter","color","exit","remove","id","updateEdges","select","currentTarget","push","set","neighbors","alpha","restart","addEdge","get","includes","filter","recolor","vertex"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/Graph.js"],"sourcesContent":["import * as d3 from 'd3';\r\n//if you add event listeners, be sure to remove them when you delete the node or destroy\r\n//the graph\r\nconst radius = 7;\r\n\r\n// const handleClick = (event, clicked) => {\r\n//     event.stopPropagation();\r\n//     console.log(event);\r\n//     console.log(event.target.tagName);\r\n//     console.log(clicked);\r\n//   }\r\n\r\nexport class Graph {\r\n    constructor(svg, centerX, centerY, defaultColor, doText) {\r\n        this.adj = new Map();\r\n        this.nodes = [];\r\n        this.edges = [];\r\n        this.v = 0;\r\n        this.defaultColor = defaultColor;\r\n        this.simulation = d3.forceSimulation(this.nodes)\r\n            .force('link', d3.forceLink(this.edges).strength(0))\r\n            .force('collide', d3.forceCollide().radius(30))\r\n            .force('center', d3.forceCenter(centerX, centerY))\r\n            .force('x', d3.forceX().x(centerX))\r\n            .force('y', d3.forceY().y(centerY).strength(0.5));\r\n        this.svg = svg\r\n            .on('click', (event, d) => this.handleClick(event, d));\r\n        this.circles = this.svg.append('g')\r\n            .classed('node-group', true);\r\n        this.lines = this.svg.append('g')\r\n            .classed('edge-group', true);\r\n        this.lines.lower();\r\n        this.doText = doText;\r\n        this.text = this.svg.append('g')\r\n            .classed('text-group', true);\r\n        this.text.raise();\r\n        this.simulation.on('tick', () => {\r\n            this.circles.selectAll('.node')\r\n                .attr('cx', node => node.x)\r\n                .attr('cy', node => node.y);\r\n            this.text.selectAll('text')\r\n                .style('x', node => node.x)\r\n                .style('y', node => node.y);\r\n            this.lines.selectAll('.edge')\r\n                .attr('x1', edge => edge.source.x)\r\n                .attr('x2', edge => edge.target.x)\r\n                .attr('y1', edge => edge.source.y)\r\n                .attr('y2', edge => edge.target.y);\r\n        });\r\n    }\r\n\r\n\r\n    handleClick(event, clicked) {\r\n        event.stopPropagation();\r\n        // console.log(event);\r\n        // console.log(clicked);\r\n        // console.log(event.target.tagName);\r\n        if(event.target.tagName === 'line') {\r\n            console.log(clicked);\r\n            this.removeEdge(clicked.source, clicked.target);\r\n        }\r\n        else if(event.target.tagName === 'svg') {\r\n            this.addNode(event.clientX, event.clientY);\r\n        }\r\n    }\r\n    updateNodes() {\r\n        this.circles\r\n            .selectAll('.node')\r\n            .data(this.nodes)\r\n            .enter()\r\n            .append('circle')\r\n            .classed('node', true)\r\n            .attr('fill', node => node.color)\r\n            .attr('stroke', 'black')\r\n            .attr('r', radius);\r\n            // .on('click', handleClick);\r\n        this.circles.exit().remove();\r\n        this.text\r\n            .selectAll('text')\r\n            .data(this.nodes)\r\n            .enter()\r\n            .append('text')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('alignment-baseline', 'middle')\r\n            .style('pointer-events', 'none')\r\n            .style('user-select', 'none')\r\n            .text(node => this.doText ? node.id : \"\");\r\n    }\r\n    updateEdges() {\r\n        this.simulation.force('link', d3.forceLink(this.edges));\r\n        this.lines\r\n            .selectAll('.edge')\r\n            .data(this.edges)\r\n            .enter()\r\n            .append('line')\r\n            .classed('edge', true)\r\n            .on('click', (event, clicked) => this.handleClick(event, clicked))\r\n            .attr('stroke-width', '3px')\r\n            .on('mouseover', (event) => {\r\n                d3.select(event.currentTarget)\r\n                .style('stroke', 'red')\r\n                .raise();\r\n            })\r\n            .on('mouseout', (event) => {\r\n                d3.select(event.currentTarget)\r\n                .style('stroke', 'gray')\r\n            })\r\n            .lower();\r\n        this.lines.exit().remove();\r\n    }\r\n    addNode(x, y) {\r\n        const node = {id: this.v, color: this.defaultColor, x, y}\r\n        this.nodes.push(node);\r\n        this.adj.set(this.v++, {node, neighbors: []});\r\n        this.simulation.nodes(this.nodes).alpha(0.2).restart();\r\n        this.updateNodes();\r\n    }\r\n    addEdge(source, target) {\r\n        if(source === target || this.adj.get(source).neighbors.includes(target)) return;\r\n        this.adj.get(source).neighbors.push(target);\r\n        this.adj.get(target).neighbors.push(source);\r\n        this.edges.push({source: this.adj.get(source).node, target: this.adj.get(target).node});\r\n        this.updateEdges();\r\n    }\r\n    removeEdge(source, target) {\r\n        console.log(this.adj);\r\n        console.log(\"deleting edge\");\r\n        this.adj.get(source.id).neighbors = this.adj.get(source.id).neighbors.filter(d => d !== target.id);\r\n        this.adj.get(target.id).neighbors = this.adj.get(target.id).neighbors.filter(d => d !== source.id);\r\n        this.edges = this.edges.filter(d => (d !== {source, target}) && (d !== {source: target, target: source}));\r\n        this.updateEdges();\r\n        console.log(this.adj);\r\n    }\r\n    recolor(vertex, color) {\r\n        this.adj.get(vertex).node.color = color;\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}