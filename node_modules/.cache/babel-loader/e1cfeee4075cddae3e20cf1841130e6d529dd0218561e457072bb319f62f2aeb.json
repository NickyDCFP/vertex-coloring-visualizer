{"ast":null,"code":"import * as d3 from 'd3';\n//if you add event listeners, be sure to remove them when you delete the node or destroy\n//the graph\nconst radius = 7;\nexport class Graph {\n  constructor(svg, centerX, centerY, defaultColor) {\n    this.adj = new Map();\n    this.nodes = [];\n    this.edges = [];\n    this.v = 0;\n    this.defaultColor = defaultColor;\n    this.simulation = d3.forceSimulation(this.nodes).force(\"link\", d3.forceLink(this.edges).strength(0)).force(\"collide\", d3.forceCollide().radius(30)).force(\"center\", d3.forceCenter(centerX, centerY)).force(\"x\", d3.forceX().x(centerX)).force(\"y\", d3.forceY().y(centerY).strength(0.5));\n    this.svg = svg;\n    this.circles = this.svg.append('g').classed('node-group', true);\n    this.lines = this.svg.append('g').classed('edge-group', true);\n    this.simulation.on(\"tick\", () => {\n      this.circles.selectAll(\".node\").attr('cx', node => node.x).attr('cy', node => node.y);\n      //   text\n      //     .attr('x', node => node.x)\n      //     .attr('y', node => node.y);\n      this.lines.selectAll(\".edge\").attr('x1', edge => boundsCheck(edge.source.x, innerWidth)).attr('x2', edge => boundsCheck(edge.target.x, innerWidth)).attr('y1', edge => boundsCheck(edge.source.y, innerHeight)).attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n  }\n  updateNodes() {\n    this.circles.selectAll('.node').data(this.nodes).enter().append('circle').classed('node', true).attr('fill', node => node.color).attr('stroke', 'black').attr('r', radius).attr('cx', d => d.x).attr('cy', d => d.y);\n  }\n  updateEdges() {\n    this.lines.selectAll('line').data(graph.edges).enter().append('line').classed('edge', true).on('click', handleClick).on('mouseover', event => {\n      d3.select(event.currentTarget).style('stroke', 'red');\n    }).on('mouseout', event => {\n      d3.select(event.currentTarget).style('stroke', 'gray');\n    });\n  }\n  addNode() {\n    const node = {\n      id: this.v,\n      color: this.defaultColor\n    };\n    this.nodes.push(node);\n    this.adj.set(this.v++, {\n      node,\n      neighbors: []\n    });\n    this.simulation.nodes(this.nodes).alpha(0.2).restart();\n    this.updateNodes();\n  }\n  addEdge(source, target) {\n    if (source === target || this.adj.get(source).neighbors.includes(target)) return;\n    this.adj.get(source).neighbors.push(target);\n    this.adj.get(target).neighbors.push(source);\n    this.edges.push({\n      source: this.adj.get(source).node,\n      target: this.adj.get(target).node\n    });\n    this.simulation.force(\"link\", d3.forceLink(this.edges));\n  }\n  recolor(vertex, color) {\n    this.adj.get(vertex).node.color = color;\n  }\n}\n;","map":{"version":3,"names":["d3","radius","Graph","constructor","svg","centerX","centerY","defaultColor","adj","Map","nodes","edges","v","simulation","forceSimulation","force","forceLink","strength","forceCollide","forceCenter","forceX","x","forceY","y","circles","append","classed","lines","on","selectAll","attr","node","edge","boundsCheck","source","innerWidth","target","innerHeight","updateNodes","data","enter","color","d","updateEdges","graph","handleClick","event","select","currentTarget","style","addNode","id","push","set","neighbors","alpha","restart","addEdge","get","includes","recolor","vertex"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/Graph.js"],"sourcesContent":["import * as d3 from 'd3';\r\n//if you add event listeners, be sure to remove them when you delete the node or destroy\r\n//the graph\r\nconst radius = 7;\r\nexport class Graph {\r\n    constructor(svg, centerX, centerY, defaultColor) {\r\n        this.adj = new Map();\r\n        this.nodes = [];\r\n        this.edges = [];\r\n        this.v = 0;\r\n        this.defaultColor = defaultColor\r\n        this.simulation = d3.forceSimulation(this.nodes)\r\n            .force(\"link\", d3.forceLink(this.edges).strength(0))\r\n            .force(\"collide\", d3.forceCollide().radius(30))\r\n            .force(\"center\", d3.forceCenter(centerX, centerY))\r\n            .force(\"x\", d3.forceX().x(centerX))\r\n            .force(\"y\", d3.forceY().y(centerY).strength(0.5));\r\n        this.svg = svg;\r\n        this.circles = this.svg.append('g')\r\n            .classed('node-group', true);\r\n        this.lines = this.svg.append('g')\r\n            .classed('edge-group', true);\r\n        this.simulation.on(\"tick\", () => {\r\n            this.circles.selectAll(\".node\")\r\n                .attr('cx', node => node.x)\r\n                .attr('cy', node => node.y);\r\n    //   text\r\n    //     .attr('x', node => node.x)\r\n    //     .attr('y', node => node.y);\r\n            this.lines.selectAll(\".edge\")\r\n                .attr('x1', edge => boundsCheck(edge.source.x, innerWidth))\r\n                .attr('x2', edge => boundsCheck(edge.target.x, innerWidth))\r\n                .attr('y1', edge => boundsCheck(edge.source.y, innerHeight))\r\n                .attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\r\n        });\r\n    }\r\n    updateNodes() {\r\n        this.circles\r\n            .selectAll('.node')\r\n            .data(this.nodes)\r\n            .enter()\r\n            .append('circle')\r\n            .classed('node', true)\r\n            .attr('fill', node => node.color)\r\n            .attr('stroke', 'black')\r\n            .attr('r', radius)\r\n            .attr('cx', d => d.x)\r\n            .attr('cy', d => d.y);\r\n    }\r\n    updateEdges() {\r\n        this.lines\r\n            .selectAll('line')\r\n            .data(graph.edges)\r\n            .enter()\r\n            .append('line')\r\n            .classed('edge', true)\r\n            .on('click', handleClick)\r\n            .on('mouseover', (event) => {\r\n                d3.select(event.currentTarget)\r\n                .style('stroke', 'red');\r\n            })\r\n            .on('mouseout', (event) => {\r\n            d3.select(event.currentTarget)\r\n            .style('stroke', 'gray')\r\n        });\r\n    }\r\n    addNode() {\r\n        const node = {id: this.v, color: this.defaultColor}\r\n        this.nodes.push(node);\r\n        this.adj.set(this.v++, {node, neighbors: []});\r\n        this.simulation.nodes(this.nodes).alpha(0.2).restart();\r\n        this.updateNodes();\r\n    }\r\n    addEdge(source, target) {\r\n        if(source === target || this.adj.get(source).neighbors.includes(target)) return;\r\n        this.adj.get(source).neighbors.push(target);\r\n        this.adj.get(target).neighbors.push(source);\r\n        this.edges.push({source: this.adj.get(source).node, target: this.adj.get(target).node});\r\n        this.simulation.force(\"link\", d3.forceLink(this.edges));\r\n    }\r\n    recolor(vertex, color) {\r\n        this.adj.get(vertex).node.color = color;\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}