{"ast":null,"code":"import * as d3 from 'd3';\nexport class Graph {\n  constructor(centerX, centerY) {\n    this.adj = new Map();\n    this.nodes = [];\n    this.edges = [];\n    this.v = 0;\n    this.simulation = d3.forceSimulation(this.nodes).force(\"link\", d3.forceLink(this.edges)).force(\"center\", d3.forceCenter(centerX, centerY));\n  }\n  addNode() {\n    const node = {\n      id: this.v,\n      color: 'black'\n    };\n    this.nodes.push(node);\n    this.adj.set(this.v++, {\n      node,\n      neighbors: []\n    });\n    this.simulation.nodes(this.nodes);\n  }\n  addEdge(source, target) {\n    this.adj.get(source).neighbors.push(target);\n    this.adj.get(target).neighbors.push(source);\n    this.edges.push({\n      source: this.adj.get(source).node,\n      target: this.adj.get(target).node\n    });\n    // this.simulation.force(\"link\", d3.forceLink(this.edges));\n  }\n\n  recolor(vertex, color) {\n    this.adj.get(vertex).node.color = color;\n  }\n}\n;","map":{"version":3,"names":["d3","Graph","constructor","centerX","centerY","adj","Map","nodes","edges","v","simulation","forceSimulation","force","forceLink","forceCenter","addNode","node","id","color","push","set","neighbors","addEdge","source","target","get","recolor","vertex"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/Graph.js"],"sourcesContent":["import * as d3 from 'd3';\r\nexport class Graph {\r\n    constructor(centerX, centerY) {\r\n        this.adj = new Map();\r\n        this.nodes = [];\r\n        this.edges = [];\r\n        this.v = 0;\r\n        this.simulation = d3.forceSimulation(this.nodes)\r\n            .force(\"link\", d3.forceLink(this.edges))\r\n            .force(\"center\", d3.forceCenter(centerX, centerY));\r\n    }\r\n    addNode() {\r\n        const node = {id: this.v, color: 'black'}\r\n        this.nodes.push(node);\r\n        this.adj.set(this.v++, {node, neighbors: []});\r\n        this.simulation.nodes(this.nodes);\r\n    }\r\n    addEdge(source, target) {\r\n        this.adj.get(source).neighbors.push(target);\r\n        this.adj.get(target).neighbors.push(source);\r\n        this.edges.push({source: this.adj.get(source).node, target: this.adj.get(target).node});\r\n        // this.simulation.force(\"link\", d3.forceLink(this.edges));\r\n    }\r\n    recolor(vertex, color) {\r\n        this.adj.get(vertex).node.color = color;\r\n    }\r\n};"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;AACxB,OAAO,MAAMC,KAAK,CAAC;EACfC,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC1B,IAAI,CAACC,GAAG,GAAG,IAAIC,GAAG,EAAE;IACpB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,CAAC,GAAG,CAAC;IACV,IAAI,CAACC,UAAU,GAAGV,EAAE,CAACW,eAAe,CAAC,IAAI,CAACJ,KAAK,CAAC,CAC3CK,KAAK,CAAC,MAAM,EAAEZ,EAAE,CAACa,SAAS,CAAC,IAAI,CAACL,KAAK,CAAC,CAAC,CACvCI,KAAK,CAAC,QAAQ,EAAEZ,EAAE,CAACc,WAAW,CAACX,OAAO,EAAEC,OAAO,CAAC,CAAC;EAC1D;EACAW,OAAOA,CAAA,EAAG;IACN,MAAMC,IAAI,GAAG;MAACC,EAAE,EAAE,IAAI,CAACR,CAAC;MAAES,KAAK,EAAE;IAAO,CAAC;IACzC,IAAI,CAACX,KAAK,CAACY,IAAI,CAACH,IAAI,CAAC;IACrB,IAAI,CAACX,GAAG,CAACe,GAAG,CAAC,IAAI,CAACX,CAAC,EAAE,EAAE;MAACO,IAAI;MAAEK,SAAS,EAAE;IAAE,CAAC,CAAC;IAC7C,IAAI,CAACX,UAAU,CAACH,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;EACrC;EACAe,OAAOA,CAACC,MAAM,EAAEC,MAAM,EAAE;IACpB,IAAI,CAACnB,GAAG,CAACoB,GAAG,CAACF,MAAM,CAAC,CAACF,SAAS,CAACF,IAAI,CAACK,MAAM,CAAC;IAC3C,IAAI,CAACnB,GAAG,CAACoB,GAAG,CAACD,MAAM,CAAC,CAACH,SAAS,CAACF,IAAI,CAACI,MAAM,CAAC;IAC3C,IAAI,CAACf,KAAK,CAACW,IAAI,CAAC;MAACI,MAAM,EAAE,IAAI,CAAClB,GAAG,CAACoB,GAAG,CAACF,MAAM,CAAC,CAACP,IAAI;MAAEQ,MAAM,EAAE,IAAI,CAACnB,GAAG,CAACoB,GAAG,CAACD,MAAM,CAAC,CAACR;IAAI,CAAC,CAAC;IACvF;EACJ;;EACAU,OAAOA,CAACC,MAAM,EAAET,KAAK,EAAE;IACnB,IAAI,CAACb,GAAG,CAACoB,GAAG,CAACE,MAAM,CAAC,CAACX,IAAI,CAACE,KAAK,GAAGA,KAAK;EAC3C;AACJ;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}