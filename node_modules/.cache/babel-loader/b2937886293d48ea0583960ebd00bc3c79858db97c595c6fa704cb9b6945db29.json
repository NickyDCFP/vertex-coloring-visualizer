{"ast":null,"code":"import * as d3 from 'd3';\nexport class Graph {\n  constructor(centerX, centerY, defaultColor) {\n    this.adj = new Map();\n    this.nodes = [];\n    this.edges = [];\n    this.v = 0;\n    this.defaultColor = defaultColor;\n    this.simulation = d3.forceSimulation(this.nodes).force(\"link\", d3.forceLink(this.edges)).force(\"charge\", d3.forceManyBody()).force(\"collide\", d3.forceCollide().radius(20)).force(\"center\", d3.forceCenter(centerX, centerY)).force('x', d3.forceX().strength(0.1).x(d => {\n      return Math.max(radius, Math.min(innerWidth - radius, d.x));\n    })).force('y', d3.forceY().strength(0.1).y(d => {\n      return Math.max(radius, Math.min(height - radius, d.y));\n    }));\n  }\n  addNode() {\n    const node = {\n      id: this.v,\n      color: this.defaultColor\n    };\n    this.nodes.push(node);\n    this.adj.set(this.v++, {\n      node,\n      neighbors: []\n    });\n    this.simulation.nodes(this.nodes);\n  }\n  addEdge(source, target) {\n    this.adj.get(source).neighbors.push(target);\n    this.adj.get(target).neighbors.push(source);\n    this.edges.push({\n      source: this.adj.get(source).node,\n      target: this.adj.get(target).node\n    });\n    this.simulation.force(\"link\", d3.forceLink(this.edges));\n  }\n  recolor(vertex, color) {\n    this.adj.get(vertex).node.color = color;\n  }\n}\n;","map":{"version":3,"names":["d3","Graph","constructor","centerX","centerY","defaultColor","adj","Map","nodes","edges","v","simulation","forceSimulation","force","forceLink","forceManyBody","forceCollide","radius","forceCenter","forceX","strength","x","d","Math","max","min","innerWidth","forceY","y","height","addNode","node","id","color","push","set","neighbors","addEdge","source","target","get","recolor","vertex"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/Graph.js"],"sourcesContent":["import * as d3 from 'd3';\r\nexport class Graph {\r\n    constructor(centerX, centerY, defaultColor) {\r\n        this.adj = new Map();\r\n        this.nodes = [];\r\n        this.edges = [];\r\n        this.v = 0;\r\n        this.defaultColor = defaultColor\r\n        this.simulation = d3.forceSimulation(this.nodes)\r\n            .force(\"link\", d3.forceLink(this.edges))\r\n            .force(\"charge\", d3.forceManyBody())\r\n            .force(\"collide\", d3.forceCollide().radius(20))\r\n            .force(\"center\", d3.forceCenter(centerX, centerY))\r\n            .force('x', d3.forceX().strength(0.1).x(d => {\r\n                return Math.max(radius, Math.min(innerWidth - radius, d.x));\r\n            }))\r\n              .force('y', d3.forceY().strength(0.1).y(d => {\r\n                return Math.max(radius, Math.min(height - radius, d.y));\r\n            }));\r\n    }\r\n    addNode() {\r\n        const node = {id: this.v, color: this.defaultColor}\r\n        this.nodes.push(node);\r\n        this.adj.set(this.v++, {node, neighbors: []});\r\n        this.simulation.nodes(this.nodes);\r\n    }\r\n    addEdge(source, target) {\r\n        this.adj.get(source).neighbors.push(target);\r\n        this.adj.get(target).neighbors.push(source);\r\n        this.edges.push({source: this.adj.get(source).node, target: this.adj.get(target).node});\r\n        this.simulation.force(\"link\", d3.forceLink(this.edges));\r\n    }\r\n    recolor(vertex, color) {\r\n        this.adj.get(vertex).node.color = color;\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}