{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14086\\\\Documents\\\\literally the only good class at this school\\\\2\\\\Project - Vertex Coloring\\\\planar_graph_coloring\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { useEffect, useRef } from 'react';\nimport { Graph } from './Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for (let i = 0; i < 100; ++i) graph.addNode();\n    for (let i = 0; i < 50; ++i) {\n      graph.addEdge(i, i * 2);\n      graph.addEdge(i, i * 3 % 100);\n      graph.addEdge(50 - i, i);\n    }\n    const svg = d3.select(containerRef.current).append('svg').attr('width', innerWidth).attr('height', innerHeight);\n    const lines = svg.selectAll('line').data(graph.edges).enter().append('line').classed('edge', true);\n    const circles = svg.selectAll('circle').data(graph.nodes).enter().append('circle').classed('node', true).attr('fill', node => node.color).attr('r', 5);\n\n    // const text = svg\n    //   .selectAll('text')\n    //   .data(graph.nodes)\n    //   .enter()\n    //   .append('text')\n    //   .attr('text-anchor', 'middle')\n    //   .attr('alignment-baseline', 'middle')\n    //   .style('pointer-events', 'none')\n    //   .style('user-select', 'none')\n    //   .text(node => node.id);\n\n    graph.simulation.on(\"tick\", () => {\n      circles.attr('cx', node => node.x).attr('cy', node => node.y);\n      // text\n      //   .attr('x', node => node.x)\n      //   .attr('y', node => node.y);\n      lines.attr('x1', edge => edge.source.x).attr('x2', edge => edge.target.x).attr('y1', edge => edge.source.y).attr('y2', edge => edge.target.y);\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","d3","useEffect","useRef","Graph","jsxDEV","_jsxDEV","innerHeight","window","innerWidth","centerX","centerY","App","_s","containerRef","graph","i","addNode","addEdge","svg","select","current","append","attr","lines","selectAll","data","edges","enter","classed","circles","nodes","node","color","simulation","on","x","y","edge","source","target","alpha","restart","console","log","adj","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport {useEffect, useRef} from 'react';\nimport {Graph} from './Graph'\n\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\n\nconst App = () => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for(let i = 0; i < 100; ++i) graph.addNode();\n    for(let i = 0; i < 50; ++i) {\n      graph.addEdge(i, i * 2); \n      graph.addEdge(i, (i * 3) % 100);\n      graph.addEdge((50 - i), i);\n    }\n    const svg = d3.select(containerRef.current)\n        .append('svg')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight);\n\n    const lines = svg\n      .selectAll('line')\n      .data(graph.edges)\n      .enter()\n      .append('line')\n      .classed('edge', true);\n\n    const circles = svg\n      .selectAll('circle')\n      .data(graph.nodes)\n      .enter()\n      .append('circle')\n      .classed('node', true)\n      .attr('fill', node => node.color)\n      .attr('r', 5);\n\n    // const text = svg\n    //   .selectAll('text')\n    //   .data(graph.nodes)\n    //   .enter()\n    //   .append('text')\n    //   .attr('text-anchor', 'middle')\n    //   .attr('alignment-baseline', 'middle')\n    //   .style('pointer-events', 'none')\n    //   .style('user-select', 'none')\n    //   .text(node => node.id);\n\n    graph.simulation.on(\"tick\", () => {\n      circles\n        .attr('cx', node => node.x)\n        .attr('cy', node => node.y);\n      // text\n      //   .attr('x', node => node.x)\n      //   .attr('y', node => node.y);\n      lines\n        .attr('x1', edge => edge.source.x)\n        .attr('x2', edge => edge.target.x)\n        .attr('y1', edge => edge.source.y)\n        .attr('y2', edge => edge.target.y);\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n\n  return <div ref={containerRef} />\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}