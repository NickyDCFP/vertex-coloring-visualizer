{"ast":null,"code":"import * as d3 from 'd3';\n//if you add event listeners, be sure to remove them when you delete the node or destroy\n//the graph\nconst radius = 7;\nconst handleClick = (event, clicked) => {\n  event.stopPropagation();\n  console.log(event);\n  console.log(event.target.tagName);\n  console.log(clicked);\n};\nexport class Graph {\n  constructor(svg, centerX, centerY, defaultColor) {\n    this.adj = new Map();\n    this.nodes = [];\n    this.edges = [];\n    this.v = 0;\n    this.defaultColor = defaultColor;\n    this.simulation = d3.forceSimulation(this.nodes).force(\"link\", d3.forceLink(this.edges).strength(0)).force(\"collide\", d3.forceCollide().radius(30)).force(\"center\", d3.forceCenter(centerX, centerY)).force(\"x\", d3.forceX().x(centerX)).force(\"y\", d3.forceY().y(centerY).strength(0.5));\n    this.svg = svg.on('click', this.handleClick);\n    this.circles = this.svg.append('g').classed('node-group', true);\n    this.lines = this.svg.append('g').classed('edge-group', true);\n    this.lines.lower();\n    this.simulation.on(\"tick\", () => {\n      this.circles.selectAll(\".node\").attr('cx', node => node.x).attr('cy', node => node.y);\n      //   text\n      //     .attr('x', node => node.x)\n      //     .attr('y', node => node.y);\n      this.lines.selectAll(\".edge\").attr('x1', edge => edge.source.x).attr('x2', edge => edge.target.x).attr('y1', edge => edge.source.y).attr('y2', edge => edge.target.y);\n    });\n  }\n  handleClick(event, clicked) {}\n  updateNodes() {\n    this.circles.selectAll('.node').data(this.nodes).enter().append('circle').classed('node', true).attr('fill', node => node.color).attr('stroke', 'black').attr('r', radius);\n    // .on('click', handleClick);\n  }\n\n  updateEdges() {\n    this.lines.selectAll('.edge').data(this.edges).enter().append('line').classed('edge', true)\n    // .on('click', handleClick)\n    .on('mouseover', event => {\n      d3.select(event.currentTarget).style('stroke', 'red').raise();\n    }).on('mouseout', event => {\n      d3.select(event.currentTarget).style('stroke', 'gray');\n    }).lower();\n  }\n  addNode() {\n    const node = {\n      id: this.v,\n      color: this.defaultColor\n    };\n    this.nodes.push(node);\n    this.adj.set(this.v++, {\n      node,\n      neighbors: []\n    });\n    this.simulation.nodes(this.nodes).alpha(0.2).restart();\n    this.updateNodes();\n  }\n  addEdge(source, target) {\n    if (source === target || this.adj.get(source).neighbors.includes(target)) return;\n    this.adj.get(source).neighbors.push(target);\n    this.adj.get(target).neighbors.push(source);\n    this.edges.push({\n      source: this.adj.get(source).node,\n      target: this.adj.get(target).node\n    });\n    this.simulation.force(\"link\", d3.forceLink(this.edges));\n    this.updateEdges();\n  }\n  recolor(vertex, color) {\n    this.adj.get(vertex).node.color = color;\n  }\n}\n;","map":{"version":3,"names":["d3","radius","handleClick","event","clicked","stopPropagation","console","log","target","tagName","Graph","constructor","svg","centerX","centerY","defaultColor","adj","Map","nodes","edges","v","simulation","forceSimulation","force","forceLink","strength","forceCollide","forceCenter","forceX","x","forceY","y","on","circles","append","classed","lines","lower","selectAll","attr","node","edge","source","updateNodes","data","enter","color","updateEdges","select","currentTarget","style","raise","addNode","id","push","set","neighbors","alpha","restart","addEdge","get","includes","recolor","vertex"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/Graph.js"],"sourcesContent":["import * as d3 from 'd3';\r\n//if you add event listeners, be sure to remove them when you delete the node or destroy\r\n//the graph\r\nconst radius = 7;\r\n\r\nconst handleClick = (event, clicked) => {\r\n    event.stopPropagation();\r\n    console.log(event);\r\n    console.log(event.target.tagName);\r\n    console.log(clicked);\r\n  }\r\n\r\nexport class Graph {\r\n    constructor(svg, centerX, centerY, defaultColor) {\r\n        this.adj = new Map();\r\n        this.nodes = [];\r\n        this.edges = [];\r\n        this.v = 0;\r\n        this.defaultColor = defaultColor\r\n        this.simulation = d3.forceSimulation(this.nodes)\r\n            .force(\"link\", d3.forceLink(this.edges).strength(0))\r\n            .force(\"collide\", d3.forceCollide().radius(30))\r\n            .force(\"center\", d3.forceCenter(centerX, centerY))\r\n            .force(\"x\", d3.forceX().x(centerX))\r\n            .force(\"y\", d3.forceY().y(centerY).strength(0.5));\r\n        this.svg = svg\r\n            .on('click', this.handleClick);\r\n        this.circles = this.svg.append('g')\r\n            .classed('node-group', true);\r\n        this.lines = this.svg.append('g')\r\n            .classed('edge-group', true);\r\n        this.lines.lower();\r\n        this.simulation.on(\"tick\", () => {\r\n            this.circles.selectAll(\".node\")\r\n                .attr('cx', node => node.x)\r\n                .attr('cy', node => node.y);\r\n    //   text\r\n    //     .attr('x', node => node.x)\r\n    //     .attr('y', node => node.y);\r\n            this.lines.selectAll(\".edge\")\r\n                .attr('x1', edge => edge.source.x)\r\n                .attr('x2', edge => edge.target.x)\r\n                .attr('y1', edge => edge.source.y)\r\n                .attr('y2', edge => edge.target.y);\r\n        });\r\n    }\r\n    handleClick(event, clicked) {\r\n\r\n    }\r\n    updateNodes() {\r\n        this.circles\r\n            .selectAll('.node')\r\n            .data(this.nodes)\r\n            .enter()\r\n            .append('circle')\r\n            .classed('node', true)\r\n            .attr('fill', node => node.color)\r\n            .attr('stroke', 'black')\r\n            .attr('r', radius);\r\n            // .on('click', handleClick);\r\n    }\r\n    updateEdges() {\r\n        this.lines\r\n            .selectAll('.edge')\r\n            .data(this.edges)\r\n            .enter()\r\n            .append('line')\r\n            .classed('edge', true)\r\n            // .on('click', handleClick)\r\n            .on('mouseover', (event) => {\r\n                d3.select(event.currentTarget)\r\n                .style('stroke', 'red')\r\n                .raise();\r\n            })\r\n            .on('mouseout', (event) => {\r\n                d3.select(event.currentTarget)\r\n                .style('stroke', 'gray')\r\n            })\r\n            .lower();\r\n    }\r\n    addNode() {\r\n        const node = {id: this.v, color: this.defaultColor}\r\n        this.nodes.push(node);\r\n        this.adj.set(this.v++, {node, neighbors: []});\r\n        this.simulation.nodes(this.nodes).alpha(0.2).restart();\r\n        this.updateNodes();\r\n    }\r\n    addEdge(source, target) {\r\n        if(source === target || this.adj.get(source).neighbors.includes(target)) return;\r\n        this.adj.get(source).neighbors.push(target);\r\n        this.adj.get(target).neighbors.push(source);\r\n        this.edges.push({source: this.adj.get(source).node, target: this.adj.get(target).node});\r\n        this.simulation.force(\"link\", d3.forceLink(this.edges));\r\n        this.updateEdges();\r\n    }\r\n    recolor(vertex, color) {\r\n        this.adj.get(vertex).node.color = color;\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}