{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14086\\\\Documents\\\\literally the only good class at this school\\\\2\\\\Project - Vertex Coloring\\\\planar_graph_coloring\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { useEffect, useRef } from 'react';\nimport { Graph } from './Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 5;\nconst showLabels = false;\nconst boundsCheck = (value, bound) => {\n  if (value < radius) return radius + 10;\n  if (value > bound - radius) return bound - 10;\n  return value;\n};\nconst handleClick = event => {\n  if (event.target.classList === 'node') console.log('node clicked');else console.log('background clicked');\n};\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for (let i = 0; i < 400; ++i) graph.addNode();\n    for (let i = 0; i < 200; ++i) {\n      graph.addEdge(i, i * 2);\n      graph.addEdge(i, i * 2 + 1);\n    }\n    const svg = d3.select(containerRef.current).append('svg').attr('width', innerWidth).attr('height', innerHeight).attr('onClick', handleClick);\n    const lines = svg.selectAll('line').data(graph.edges).enter().append('line').classed('edge', true);\n    const circles = svg.selectAll('circle').data(graph.nodes).enter().append('circle').classed('node', true).attr('fill', node => node.color).attr('r', radius);\n    const text = svg.selectAll('text').data(graph.nodes).enter().append('text').attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('pointer-events', 'none').style('user-select', 'none').text(node => showLabels ? node.id : \"\");\n    graph.simulation.on(\"tick\", () => {\n      circles.attr('cx', node => boundsCheck(node.x, innerWidth)).attr('cy', node => boundsCheck(node.y, innerHeight));\n      text.attr('x', node => node.x).attr('y', node => node.y);\n      lines.attr('x1', edge => boundsCheck(edge.source.x, innerWidth)).attr('x2', edge => boundsCheck(edge.target.x, innerWidth)).attr('y1', edge => boundsCheck(edge.source.y, innerHeight)).attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","d3","useEffect","useRef","Graph","jsxDEV","_jsxDEV","innerHeight","window","innerWidth","centerX","centerY","radius","showLabels","boundsCheck","value","bound","handleClick","event","target","classList","console","log","App","_s","containerRef","graph","i","addNode","addEdge","svg","select","current","append","attr","lines","selectAll","data","edges","enter","classed","circles","nodes","node","color","text","style","id","simulation","on","x","y","edge","source","alpha","restart","adj","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport {useEffect, useRef} from 'react';\nimport {Graph} from './Graph'\n\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 5;\nconst showLabels = false;\n\nconst boundsCheck = (value, bound) => {\n  if(value < radius) return radius + 10;\n  if(value > bound - radius) return bound - 10;\n  return value;\n}\n\nconst handleClick = (event) => {\n  if(event.target.classList === 'node') console.log('node clicked');\n  else console.log('background clicked')\n}\n\nconst App = () => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for(let i = 0; i < 400; ++i) graph.addNode();\n    for(let i = 0; i < 200; ++i) {\n      graph.addEdge(i, i * 2); \n      graph.addEdge(i, i * 2 + 1);\n    }\n    const svg = d3.select(containerRef.current)\n        .append('svg')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .attr('onClick', handleClick);\n\n    const lines = svg\n      .selectAll('line')\n      .data(graph.edges)\n      .enter()\n      .append('line')\n      .classed('edge', true);\n\n    const circles = svg\n      .selectAll('circle')\n      .data(graph.nodes)\n      .enter()\n      .append('circle')\n      .classed('node', true)\n      .attr('fill', node => node.color)\n      .attr('r', radius);\n\n    const text = svg\n      .selectAll('text')\n      .data(graph.nodes)\n      .enter()\n      .append('text')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .style('pointer-events', 'none')\n      .style('user-select', 'none')\n      .text(node => showLabels ? node.id : \"\");\n\n    graph.simulation.on(\"tick\", () => {\n      circles\n        .attr('cx', node => boundsCheck(node.x, innerWidth))\n        .attr('cy', node => boundsCheck(node.y, innerHeight));\n      text\n        .attr('x', node => node.x)\n        .attr('y', node => node.y);\n      lines\n        .attr('x1', edge => boundsCheck(edge.source.x, innerWidth))\n        .attr('x2', edge => boundsCheck(edge.target.x, innerWidth))\n        .attr('y1', edge => boundsCheck(edge.source.y, innerHeight))\n        .attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n\n  return <div ref={containerRef} />\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}