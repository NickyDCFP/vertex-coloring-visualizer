{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14086\\\\Documents\\\\literally the only good class at this school\\\\2\\\\Project - Vertex Coloring\\\\planar_graph_coloring\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { useEffect, useRef } from 'react';\nimport { Graph } from './Graph';\n\n//current issues: duplicates are present in the adjacency list (as in, 1: [0, 0, 1])\n//                we still want the adjacency to go both ways, since this is an\n//                undirected graph\n//duplicates are present in the edges list, which is easy (just don't add the edge twice)\n\n//although maybe want to make sure that the edge that\n//they're adding, when they're adding it,\n//doesn't already exist... but can do that check in the\n//adjacency list in O(deg) time\n\n//maybe have pitches deepen as the recursion stack grows\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 7;\nconst showLabels = false;\nconst boundsCheck = (value, bound) => {\n  if (value < radius) return radius + 10;\n  if (value > bound - radius) return bound - 10;\n  return value;\n};\nconst handleClick = (event, node, graph) => {\n  console.log(event.target.tagName);\n  console.log(node);\n};\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(containerRef.current).append('svg').attr('width', innerWidth).attr('height', innerHeight);\n    const graph = new Graph(svg, centerX, centerY, '#45d097');\n    for (let i = 0; i < 20; ++i) graph.addNode();\n    for (let i = 0; i < 20; ++i) {\n      for (let j = 0; j < 20; ++j) {\n        graph.addEdge(i, j);\n      }\n    }\n    svg.on('click', (event, d) => handleClick(event, d, graph));\n    const lines = svg.selectAll('line').data(graph.edges).enter().append('line').classed('edge', true).on('click', handleClick).on('mouseover', event => {\n      d3.select(event.currentTarget).style('stroke', 'red');\n    }).on('mouseout', event => {\n      d3.select(event.currentTarget).style('stroke', 'gray');\n    });\n    const circles = svg.selectAll('circle').data(graph.nodes).enter().append('circle').classed('node', true).attr('fill', node => node.color).attr('r', radius).on('click', (event, node) => handleClick(event, node, graph)); //consider making this print out node id when clicked just to\n    //know you know that i can do it you know you know\n    /*\n      .on('click', node => {\n        console.log(`Node ${node.id} clicked`);\n      });\n    */\n\n    const text = svg.selectAll('text').data(graph.nodes).enter().append('text').attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('pointer-events', 'none').style('user-select', 'none').text(node => showLabels ? node.id : \"\");\n    graph.simulation.on(\"tick\", () => {\n      circles.attr('cx', node => boundsCheck(node.x, innerWidth)).attr('cy', node => boundsCheck(node.y, innerHeight));\n      text.attr('x', node => node.x).attr('y', node => node.y);\n      lines.attr('x1', edge => boundsCheck(edge.source.x, innerWidth)).attr('x2', edge => boundsCheck(edge.target.x, innerWidth)).attr('y1', edge => boundsCheck(edge.source.y, innerHeight)).attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(0.2).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","d3","useEffect","useRef","Graph","jsxDEV","_jsxDEV","innerHeight","window","innerWidth","centerX","centerY","radius","showLabels","boundsCheck","value","bound","handleClick","event","node","graph","console","log","target","tagName","App","_s","containerRef","svg","select","current","append","attr","i","addNode","j","addEdge","on","d","lines","selectAll","data","edges","enter","classed","currentTarget","style","circles","nodes","color","text","id","simulation","x","y","edge","source","alpha","restart","adj","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport {useEffect, useRef} from 'react';\nimport {Graph} from './Graph'\n\n//current issues: duplicates are present in the adjacency list (as in, 1: [0, 0, 1])\n//                we still want the adjacency to go both ways, since this is an\n//                undirected graph\n//duplicates are present in the edges list, which is easy (just don't add the edge twice)\n\n//although maybe want to make sure that the edge that\n//they're adding, when they're adding it,\n//doesn't already exist... but can do that check in the\n//adjacency list in O(deg) time\n\n//maybe have pitches deepen as the recursion stack grows\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 7;\nconst showLabels = false;\n\nconst boundsCheck = (value, bound) => {\n  if(value < radius) return radius + 10;\n  if(value > bound - radius) return bound - 10;\n  return value;\n}\n\nconst handleClick = (event, node, graph) => {\n  console.log(event.target.tagName);\n  console.log(node);\n}\n\nconst App = () => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(containerRef.current)\n      .append('svg')\n      .attr('width', innerWidth)\n      .attr('height', innerHeight);\n    const graph = new Graph(svg, centerX, centerY, '#45d097');\n    for(let i = 0; i < 20; ++i) graph.addNode();\n    for(let i = 0; i < 20; ++i) {\n      for(let j = 0; j < 20; ++j) {\n        graph.addEdge(i, j);\n      }\n    }\n    svg.on('click', (event, d) => handleClick(event, d, graph));\n\n    const lines = svg\n      .selectAll('line')\n      .data(graph.edges)\n      .enter()\n      .append('line')\n      .classed('edge', true)\n      .on('click', handleClick)\n      .on('mouseover', (event) => {\n        d3.select(event.currentTarget)\n        .style('stroke', 'red');\n      })\n      .on('mouseout', (event) => {\n        d3.select(event.currentTarget)\n        .style('stroke', 'gray')\n      });\n\n    const circles = svg\n      .selectAll('circle')\n      .data(graph.nodes)\n      .enter()\n      .append('circle')\n      .classed('node', true)\n      .attr('fill', node => node.color)\n      .attr('r', radius)\n      .on('click', (event, node) => handleClick(event, node, graph)); //consider making this print out node id when clicked just to\n      //know you know that i can do it you know you know\n      /*\n        .on('click', node => {\n          console.log(`Node ${node.id} clicked`);\n        });\n      */\n\n    const text = svg\n      .selectAll('text')\n      .data(graph.nodes)\n      .enter()\n      .append('text')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .style('pointer-events', 'none')\n      .style('user-select', 'none')\n      .text(node => showLabels ? node.id : \"\");\n\n    graph.simulation.on(\"tick\", () => {\n      circles\n        .attr('cx', node => boundsCheck(node.x, innerWidth))\n        .attr('cy', node => boundsCheck(node.y, innerHeight));\n      text\n        .attr('x', node => node.x)\n        .attr('y', node => node.y);\n      lines\n        .attr('x1', edge => boundsCheck(edge.source.x, innerWidth))\n        .attr('x2', edge => boundsCheck(edge.target.x, innerWidth))\n        .attr('y1', edge => boundsCheck(edge.source.y, innerHeight))\n        .attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(0.2).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n\n  return <div ref={containerRef} />\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAAQC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACvC,SAAQC,KAAK,QAAO,SAAS;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,MAAM,CAACD,WAAW;AACtC,MAAME,UAAU,GAAGD,MAAM,CAACC,UAAU;AACpC,MAAMC,OAAO,GAAGD,UAAU,GAAG,CAAC;AAC9B,MAAME,OAAO,GAAGJ,WAAW,GAAG,CAAC;AAC/B,MAAMK,MAAM,GAAG,CAAC;AAChB,MAAMC,UAAU,GAAG,KAAK;AAExB,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;EACpC,IAAGD,KAAK,GAAGH,MAAM,EAAE,OAAOA,MAAM,GAAG,EAAE;EACrC,IAAGG,KAAK,GAAGC,KAAK,GAAGJ,MAAM,EAAE,OAAOI,KAAK,GAAG,EAAE;EAC5C,OAAOD,KAAK;AACd,CAAC;AAED,MAAME,WAAW,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,KAAK;EAC1CC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACK,MAAM,CAACC,OAAO,CAAC;EACjCH,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;AACnB,CAAC;AAED,MAAMM,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,YAAY,GAAGxB,MAAM,CAAC,IAAI,CAAC;EACjCD,SAAS,CAAC,MAAM;IACd,MAAM0B,GAAG,GAAG3B,EAAE,CAAC4B,MAAM,CAACF,YAAY,CAACG,OAAO,CAAC,CACxCC,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,EAAEvB,UAAU,CAAC,CACzBuB,IAAI,CAAC,QAAQ,EAAEzB,WAAW,CAAC;IAC9B,MAAMa,KAAK,GAAG,IAAIhB,KAAK,CAACwB,GAAG,EAAElB,OAAO,EAAEC,OAAO,EAAE,SAAS,CAAC;IACzD,KAAI,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAEb,KAAK,CAACc,OAAO,EAAE;IAC3C,KAAI,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;MAC1B,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;QAC1Bf,KAAK,CAACgB,OAAO,CAACH,CAAC,EAAEE,CAAC,CAAC;MACrB;IACF;IACAP,GAAG,CAACS,EAAE,CAAC,OAAO,EAAE,CAACnB,KAAK,EAAEoB,CAAC,KAAKrB,WAAW,CAACC,KAAK,EAAEoB,CAAC,EAAElB,KAAK,CAAC,CAAC;IAE3D,MAAMmB,KAAK,GAAGX,GAAG,CACdY,SAAS,CAAC,MAAM,CAAC,CACjBC,IAAI,CAACrB,KAAK,CAACsB,KAAK,CAAC,CACjBC,KAAK,EAAE,CACPZ,MAAM,CAAC,MAAM,CAAC,CACda,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CACrBP,EAAE,CAAC,OAAO,EAAEpB,WAAW,CAAC,CACxBoB,EAAE,CAAC,WAAW,EAAGnB,KAAK,IAAK;MAC1BjB,EAAE,CAAC4B,MAAM,CAACX,KAAK,CAAC2B,aAAa,CAAC,CAC7BC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC;IACzB,CAAC,CAAC,CACDT,EAAE,CAAC,UAAU,EAAGnB,KAAK,IAAK;MACzBjB,EAAE,CAAC4B,MAAM,CAACX,KAAK,CAAC2B,aAAa,CAAC,CAC7BC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC;IAC1B,CAAC,CAAC;IAEJ,MAAMC,OAAO,GAAGnB,GAAG,CAChBY,SAAS,CAAC,QAAQ,CAAC,CACnBC,IAAI,CAACrB,KAAK,CAAC4B,KAAK,CAAC,CACjBL,KAAK,EAAE,CACPZ,MAAM,CAAC,QAAQ,CAAC,CAChBa,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CACrBZ,IAAI,CAAC,MAAM,EAAEb,IAAI,IAAIA,IAAI,CAAC8B,KAAK,CAAC,CAChCjB,IAAI,CAAC,GAAG,EAAEpB,MAAM,CAAC,CACjByB,EAAE,CAAC,OAAO,EAAE,CAACnB,KAAK,EAAEC,IAAI,KAAKF,WAAW,CAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChE;IACA;AACN;AACA;AACA;AACA;;IAEI,MAAM8B,IAAI,GAAGtB,GAAG,CACbY,SAAS,CAAC,MAAM,CAAC,CACjBC,IAAI,CAACrB,KAAK,CAAC4B,KAAK,CAAC,CACjBL,KAAK,EAAE,CACPZ,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CACpCc,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAC/BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BI,IAAI,CAAC/B,IAAI,IAAIN,UAAU,GAAGM,IAAI,CAACgC,EAAE,GAAG,EAAE,CAAC;IAE1C/B,KAAK,CAACgC,UAAU,CAACf,EAAE,CAAC,MAAM,EAAE,MAAM;MAChCU,OAAO,CACJf,IAAI,CAAC,IAAI,EAAEb,IAAI,IAAIL,WAAW,CAACK,IAAI,CAACkC,CAAC,EAAE5C,UAAU,CAAC,CAAC,CACnDuB,IAAI,CAAC,IAAI,EAAEb,IAAI,IAAIL,WAAW,CAACK,IAAI,CAACmC,CAAC,EAAE/C,WAAW,CAAC,CAAC;MACvD2C,IAAI,CACDlB,IAAI,CAAC,GAAG,EAAEb,IAAI,IAAIA,IAAI,CAACkC,CAAC,CAAC,CACzBrB,IAAI,CAAC,GAAG,EAAEb,IAAI,IAAIA,IAAI,CAACmC,CAAC,CAAC;MAC5Bf,KAAK,CACFP,IAAI,CAAC,IAAI,EAAEuB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAACC,MAAM,CAACH,CAAC,EAAE5C,UAAU,CAAC,CAAC,CAC1DuB,IAAI,CAAC,IAAI,EAAEuB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAAChC,MAAM,CAAC8B,CAAC,EAAE5C,UAAU,CAAC,CAAC,CAC1DuB,IAAI,CAAC,IAAI,EAAEuB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAACC,MAAM,CAACF,CAAC,EAAE/C,WAAW,CAAC,CAAC,CAC3DyB,IAAI,CAAC,IAAI,EAAEuB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAAChC,MAAM,CAAC+B,CAAC,EAAE/C,WAAW,CAAC,CAAC;IAChE,CAAC,CAAC;IACFa,KAAK,CAACgC,UAAU,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,EAAE;IACrCrC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACuC,GAAG,CAAC;IACtBtC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC4B,KAAK,CAAC;IACxB3B,OAAO,CAACC,GAAG,CAACF,KAAK,CAACsB,KAAK,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOpC,OAAA;IAAKsD,GAAG,EAAEjC;EAAa;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACnC,CAAC;AAAAtC,EAAA,CA/EKD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAiFT,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}