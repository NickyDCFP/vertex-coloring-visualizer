{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14086\\\\Documents\\\\literally the only good class at this school\\\\2\\\\Project - Vertex Coloring\\\\planar_graph_coloring\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { useEffect, useRef } from 'react';\nimport { Graph } from './Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 5;\nconst showLabels = false;\nconst boundsCheck = (value, bound) => {\n  if (value < radius) return radius + 10;\n  if (value > bound - radius) return bound - 10;\n  return value;\n};\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for (let i = 0; i < 400; ++i) graph.addNode();\n    for (let i = 0; i < 200; ++i) {\n      graph.addEdge(i, i * 2);\n      graph.addEdge(i, i * 2 + 1);\n    }\n    const svg = d3.select(containerRef.current).append('svg').attr('width', innerWidth).attr('height', innerHeight).attr('onClick', handleClick);\n    const lines = svg.selectAll('line').data(graph.edges).enter().append('line').classed('edge', true);\n    const circles = svg.selectAll('circle').data(graph.nodes).enter().append('circle').classed('node', true).attr('fill', node => node.color).attr('r', radius);\n    const text = svg.selectAll('text').data(graph.nodes).enter().append('text').attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('pointer-events', 'none').style('user-select', 'none').text(node => showLabels ? node.id : \"\");\n    graph.simulation.on(\"tick\", () => {\n      circles.attr('cx', node => boundsCheck(node.x, innerWidth)).attr('cy', node => boundsCheck(node.y, innerHeight));\n      text.attr('x', node => node.x).attr('y', node => node.y);\n      lines.attr('x1', edge => boundsCheck(edge.source.x, innerWidth)).attr('x2', edge => boundsCheck(edge.target.x, innerWidth)).attr('y1', edge => boundsCheck(edge.source.y, innerHeight)).attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","d3","useEffect","useRef","Graph","jsxDEV","_jsxDEV","innerHeight","window","innerWidth","centerX","centerY","radius","showLabels","boundsCheck","value","bound","App","_s","containerRef","graph","i","addNode","addEdge","svg","select","current","append","attr","handleClick","lines","selectAll","data","edges","enter","classed","circles","nodes","node","color","text","style","id","simulation","on","x","y","edge","source","target","alpha","restart","console","log","adj","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport {useEffect, useRef} from 'react';\nimport {Graph} from './Graph'\n\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 5;\nconst showLabels = false;\n\nconst boundsCheck = (value, bound) => {\n  if(value < radius) return radius + 10;\n  if(value > bound - radius) return bound - 10;\n  return value;\n}\n\nconst App = () => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for(let i = 0; i < 400; ++i) graph.addNode();\n    for(let i = 0; i < 200; ++i) {\n      graph.addEdge(i, i * 2); \n      graph.addEdge(i, i * 2 + 1);\n    }\n    const svg = d3.select(containerRef.current)\n        .append('svg')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .attr('onClick', handleClick);\n\n    const lines = svg\n      .selectAll('line')\n      .data(graph.edges)\n      .enter()\n      .append('line')\n      .classed('edge', true);\n\n    const circles = svg\n      .selectAll('circle')\n      .data(graph.nodes)\n      .enter()\n      .append('circle')\n      .classed('node', true)\n      .attr('fill', node => node.color)\n      .attr('r', radius);\n\n    const text = svg\n      .selectAll('text')\n      .data(graph.nodes)\n      .enter()\n      .append('text')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .style('pointer-events', 'none')\n      .style('user-select', 'none')\n      .text(node => showLabels ? node.id : \"\");\n\n    graph.simulation.on(\"tick\", () => {\n      circles\n        .attr('cx', node => boundsCheck(node.x, innerWidth))\n        .attr('cy', node => boundsCheck(node.y, innerHeight));\n      text\n        .attr('x', node => node.x)\n        .attr('y', node => node.y);\n      lines\n        .attr('x1', edge => boundsCheck(edge.source.x, innerWidth))\n        .attr('x2', edge => boundsCheck(edge.target.x, innerWidth))\n        .attr('y1', edge => boundsCheck(edge.source.y, innerHeight))\n        .attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, []);\n\n  return <div ref={containerRef} />\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}