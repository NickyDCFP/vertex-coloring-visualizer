{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14086\\\\Documents\\\\literally the only good class at this school\\\\2\\\\Project - Vertex Coloring\\\\planar_graph_coloring\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { useEffect, useRef } from 'react';\nimport { Graph } from './Graph';\n\n//current issues: duplicates are present in the adjacency list (as in, 1: [0, 0, 1])\n//                we still want the adjacency to go both ways, since this is an\n//                undirected graph\n//duplicates are present in the edges list, which is easy (just don't add the edge twice)\n\n//although maybe want to make sure that the edge that\n//they're adding, when they're adding it,\n//doesn't already exist... but can do that check in the\n//adjacency list in O(deg) time\n\n//maybe have pitches deepen as the recursion stack grows\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 7;\nconst showLabels = false;\nconst boundsCheck = (value, bound) => {\n  if (value < radius) return radius + 10;\n  if (value > bound - radius) return bound - 10;\n  return value;\n};\nconst handleClick = (event, graph) => {\n  if (event.target.tagName === 'circle') console.log('node clicked');else if (event.target.tagName === 'line') console.log('edge clicked');else graph.addNode();\n  console.log(graph.adj);\n};\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for (let i = 0; i < 20; ++i) graph.addNode();\n    for (let i = 0; i < 20; ++i) {\n      for (let j = 0; j < 20; ++j) {\n        graph.addEdge(i, j);\n      }\n    }\n    const svg = d3.select(containerRef.current).append('svg').attr('width', innerWidth).attr('height', innerHeight).on('click', event => handleClick(event, graph));\n    const lines = svg.selectAll('line').data(graph.edges).enter().append('line').classed('edge', true).style('z-index', 1).on('click', event => handleClick(event, graph)).on('mouseover', event => {\n      d3.select(event.currentTarget).style('stroke', 'red');\n    }).on('mouseout', event => {\n      d3.select(event.currentTarget).style('stroke', 'gray');\n    });\n    const circles = svg.selectAll('circle').data(graph.nodes).enter().append('circle').classed('node', true).style('z-index', 2).attr('fill', node => node.color).attr('r', radius).on('click', event => handleClick(event, graph)); //consider making this print out node id when clicked just to\n    //know you know that i can do it you know you know\n    /*\n      .on('click', node => {\n        console.log(`Node ${node.id} clicked`);\n      });\n    */\n\n    const text = svg.selectAll('text').data(graph.nodes).enter().append('text').attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('pointer-events', 'none').style('user-select', 'none').text(node => showLabels ? node.id : \"\");\n    graph.simulation.on(\"tick\", () => {\n      circles.attr('cx', node => boundsCheck(node.x, innerWidth)).attr('cy', node => boundsCheck(node.y, innerHeight));\n      text.attr('x', node => node.x).attr('y', node => node.y);\n      lines.attr('x1', edge => boundsCheck(edge.source.x, innerWidth)).attr('x2', edge => boundsCheck(edge.target.x, innerWidth)).attr('y1', edge => boundsCheck(edge.source.y, innerHeight)).attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, [graph.nodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","d3","useEffect","useRef","Graph","jsxDEV","_jsxDEV","innerHeight","window","innerWidth","centerX","centerY","radius","showLabels","boundsCheck","value","bound","handleClick","event","graph","target","tagName","console","log","addNode","adj","App","_s","containerRef","i","j","addEdge","svg","select","current","append","attr","on","lines","selectAll","data","edges","enter","classed","style","currentTarget","circles","nodes","node","color","text","id","simulation","x","y","edge","source","alpha","restart","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/14086/Documents/literally the only good class at this school/2/Project - Vertex Coloring/planar_graph_coloring/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport {useEffect, useRef} from 'react';\nimport {Graph} from './Graph'\n\n//current issues: duplicates are present in the adjacency list (as in, 1: [0, 0, 1])\n//                we still want the adjacency to go both ways, since this is an\n//                undirected graph\n//duplicates are present in the edges list, which is easy (just don't add the edge twice)\n\n//although maybe want to make sure that the edge that\n//they're adding, when they're adding it,\n//doesn't already exist... but can do that check in the\n//adjacency list in O(deg) time\n\n//maybe have pitches deepen as the recursion stack grows\nconst innerHeight = window.innerHeight;\nconst innerWidth = window.innerWidth;\nconst centerX = innerWidth / 2;\nconst centerY = innerHeight / 2;\nconst radius = 7;\nconst showLabels = false;\n\nconst boundsCheck = (value, bound) => {\n  if(value < radius) return radius + 10;\n  if(value > bound - radius) return bound - 10;\n  return value;\n}\n\nconst handleClick = (event, graph) => {\n  if(event.target.tagName === 'circle') console.log('node clicked');\n  else if(event.target.tagName === 'line') console.log('edge clicked');\n  else graph.addNode();\n  console.log(graph.adj);\n}\n\nconst App = () => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph(centerX, centerY, '#45d097');\n    for(let i = 0; i < 20; ++i) graph.addNode();\n    for(let i = 0; i < 20; ++i) {\n      for(let j = 0; j < 20; ++j) {\n        graph.addEdge(i, j);\n      }\n    }\n    const svg = d3.select(containerRef.current)\n        .append('svg')\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .on('click', (event) => handleClick(event, graph));\n\n    const lines = svg\n      .selectAll('line')\n      .data(graph.edges)\n      .enter()\n      .append('line')\n      .classed('edge', true)\n      .style('z-index', 1)\n      .on('click', (event) => handleClick(event, graph))\n      .on('mouseover', (event) => {\n        d3.select(event.currentTarget)\n        .style('stroke', 'red');\n      })\n      .on('mouseout', (event) => {\n        d3.select(event.currentTarget)\n        .style('stroke', 'gray')\n      });\n\n    const circles = svg\n      .selectAll('circle')\n      .data(graph.nodes)\n      .enter()\n      .append('circle')\n      .classed('node', true)\n      .style('z-index', 2)\n      .attr('fill', node => node.color)\n      .attr('r', radius)\n      .on('click', (event) => handleClick(event, graph)); //consider making this print out node id when clicked just to\n      //know you know that i can do it you know you know\n      /*\n        .on('click', node => {\n          console.log(`Node ${node.id} clicked`);\n        });\n      */\n\n    const text = svg\n      .selectAll('text')\n      .data(graph.nodes)\n      .enter()\n      .append('text')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .style('pointer-events', 'none')\n      .style('user-select', 'none')\n      .text(node => showLabels ? node.id : \"\");\n\n    graph.simulation.on(\"tick\", () => {\n      circles\n        .attr('cx', node => boundsCheck(node.x, innerWidth))\n        .attr('cy', node => boundsCheck(node.y, innerHeight));\n      text\n        .attr('x', node => node.x)\n        .attr('y', node => node.y);\n      lines\n        .attr('x1', edge => boundsCheck(edge.source.x, innerWidth))\n        .attr('x2', edge => boundsCheck(edge.target.x, innerWidth))\n        .attr('y1', edge => boundsCheck(edge.source.y, innerHeight))\n        .attr('y2', edge => boundsCheck(edge.target.y, innerHeight));\n    });\n    graph.simulation.alpha(1).restart();\n    console.log(graph.adj);\n    console.log(graph.nodes);\n    console.log(graph.edges);\n  }, [graph.nodes]);\n\n  return <div ref={containerRef} />\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAAQC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACvC,SAAQC,KAAK,QAAO,SAAS;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,MAAM,CAACD,WAAW;AACtC,MAAME,UAAU,GAAGD,MAAM,CAACC,UAAU;AACpC,MAAMC,OAAO,GAAGD,UAAU,GAAG,CAAC;AAC9B,MAAME,OAAO,GAAGJ,WAAW,GAAG,CAAC;AAC/B,MAAMK,MAAM,GAAG,CAAC;AAChB,MAAMC,UAAU,GAAG,KAAK;AAExB,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;EACpC,IAAGD,KAAK,GAAGH,MAAM,EAAE,OAAOA,MAAM,GAAG,EAAE;EACrC,IAAGG,KAAK,GAAGC,KAAK,GAAGJ,MAAM,EAAE,OAAOI,KAAK,GAAG,EAAE;EAC5C,OAAOD,KAAK;AACd,CAAC;AAED,MAAME,WAAW,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;EACpC,IAAGD,KAAK,CAACE,MAAM,CAACC,OAAO,KAAK,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC,KAC7D,IAAGL,KAAK,CAACE,MAAM,CAACC,OAAO,KAAK,MAAM,EAAEC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC,KAChEJ,KAAK,CAACK,OAAO,EAAE;EACpBF,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACM,GAAG,CAAC;AACxB,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,YAAY,GAAGzB,MAAM,CAAC,IAAI,CAAC;EACjCD,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAG,IAAIf,KAAK,CAACM,OAAO,EAAEC,OAAO,EAAE,SAAS,CAAC;IACpD,KAAI,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAEV,KAAK,CAACK,OAAO,EAAE;IAC3C,KAAI,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;MAC1B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;QAC1BX,KAAK,CAACY,OAAO,CAACF,CAAC,EAAEC,CAAC,CAAC;MACrB;IACF;IACA,MAAME,GAAG,GAAG/B,EAAE,CAACgC,MAAM,CAACL,YAAY,CAACM,OAAO,CAAC,CACtCC,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,EAAE3B,UAAU,CAAC,CACzB2B,IAAI,CAAC,QAAQ,EAAE7B,WAAW,CAAC,CAC3B8B,EAAE,CAAC,OAAO,EAAGnB,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAC,CAAC;IAEtD,MAAMmB,KAAK,GAAGN,GAAG,CACdO,SAAS,CAAC,MAAM,CAAC,CACjBC,IAAI,CAACrB,KAAK,CAACsB,KAAK,CAAC,CACjBC,KAAK,EAAE,CACPP,MAAM,CAAC,MAAM,CAAC,CACdQ,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CACrBC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBP,EAAE,CAAC,OAAO,EAAGnB,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAC,CAAC,CACjDkB,EAAE,CAAC,WAAW,EAAGnB,KAAK,IAAK;MAC1BjB,EAAE,CAACgC,MAAM,CAACf,KAAK,CAAC2B,aAAa,CAAC,CAC7BD,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC;IACzB,CAAC,CAAC,CACDP,EAAE,CAAC,UAAU,EAAGnB,KAAK,IAAK;MACzBjB,EAAE,CAACgC,MAAM,CAACf,KAAK,CAAC2B,aAAa,CAAC,CAC7BD,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC;IAC1B,CAAC,CAAC;IAEJ,MAAME,OAAO,GAAGd,GAAG,CAChBO,SAAS,CAAC,QAAQ,CAAC,CACnBC,IAAI,CAACrB,KAAK,CAAC4B,KAAK,CAAC,CACjBL,KAAK,EAAE,CACPP,MAAM,CAAC,QAAQ,CAAC,CAChBQ,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CACrBC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBR,IAAI,CAAC,MAAM,EAAEY,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CAChCb,IAAI,CAAC,GAAG,EAAExB,MAAM,CAAC,CACjByB,EAAE,CAAC,OAAO,EAAGnB,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpD;IACA;AACN;AACA;AACA;AACA;;IAEI,MAAM+B,IAAI,GAAGlB,GAAG,CACbO,SAAS,CAAC,MAAM,CAAC,CACjBC,IAAI,CAACrB,KAAK,CAAC4B,KAAK,CAAC,CACjBL,KAAK,EAAE,CACPP,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CACpCQ,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAC/BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BM,IAAI,CAACF,IAAI,IAAInC,UAAU,GAAGmC,IAAI,CAACG,EAAE,GAAG,EAAE,CAAC;IAE1ChC,KAAK,CAACiC,UAAU,CAACf,EAAE,CAAC,MAAM,EAAE,MAAM;MAChCS,OAAO,CACJV,IAAI,CAAC,IAAI,EAAEY,IAAI,IAAIlC,WAAW,CAACkC,IAAI,CAACK,CAAC,EAAE5C,UAAU,CAAC,CAAC,CACnD2B,IAAI,CAAC,IAAI,EAAEY,IAAI,IAAIlC,WAAW,CAACkC,IAAI,CAACM,CAAC,EAAE/C,WAAW,CAAC,CAAC;MACvD2C,IAAI,CACDd,IAAI,CAAC,GAAG,EAAEY,IAAI,IAAIA,IAAI,CAACK,CAAC,CAAC,CACzBjB,IAAI,CAAC,GAAG,EAAEY,IAAI,IAAIA,IAAI,CAACM,CAAC,CAAC;MAC5BhB,KAAK,CACFF,IAAI,CAAC,IAAI,EAAEmB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAACC,MAAM,CAACH,CAAC,EAAE5C,UAAU,CAAC,CAAC,CAC1D2B,IAAI,CAAC,IAAI,EAAEmB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAACnC,MAAM,CAACiC,CAAC,EAAE5C,UAAU,CAAC,CAAC,CAC1D2B,IAAI,CAAC,IAAI,EAAEmB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAACC,MAAM,CAACF,CAAC,EAAE/C,WAAW,CAAC,CAAC,CAC3D6B,IAAI,CAAC,IAAI,EAAEmB,IAAI,IAAIzC,WAAW,CAACyC,IAAI,CAACnC,MAAM,CAACkC,CAAC,EAAE/C,WAAW,CAAC,CAAC;IAChE,CAAC,CAAC;IACFY,KAAK,CAACiC,UAAU,CAACK,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;IACnCpC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACM,GAAG,CAAC;IACtBH,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC4B,KAAK,CAAC;IACxBzB,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACsB,KAAK,CAAC;EAC1B,CAAC,EAAE,CAACtB,KAAK,CAAC4B,KAAK,CAAC,CAAC;EAEjB,oBAAOzC,OAAA;IAAKqD,GAAG,EAAE/B;EAAa;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACnC,CAAC;AAAApC,EAAA,CAjFKD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAmFT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}