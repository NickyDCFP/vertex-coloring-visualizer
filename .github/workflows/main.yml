# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Vertex Coloring Visualizer CI/CD

on:
  push:
    branches: [ "master" ]
    
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
            # Consider this as an add on to optimize the execution of actions
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Dependencies
      run: npm install
    - name: Setup CI
      run: npm ci
    - name: Build App
      run: npm run build --if-present
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps: 
    - name: Checkout Repo
      uses: actions/checkout@v3
    - name: Deploy App
      run: npm run deploy
      env:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        
